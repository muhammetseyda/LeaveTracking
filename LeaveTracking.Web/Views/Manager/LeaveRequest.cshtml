@using LeaveTracking.Application.DTOs.LeaveRequestDTOs
@using LeaveTracking.Domain.Enums
@using LeaveTracking.Application.Helpers
@model IEnumerable<LeaveRequestDto>
@{
    ViewBag.Title = "İzin Talepleri - Yönetici";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-12">
        <h2>İzin Talepleri</h2>
        <p class="text-muted">Talepleri yönetin</p>
        <hr />
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead class="thead-dark">
                    <tr>
                        <th>Çalışan</th>
                        <th>İzin Türü</th>
                        <th>Başlangıç</th>
                        <th>Bitiş</th>
                        <th>Gün Sayısı</th>
                        <th>Açıklama</th>
                        <th>Durum</th>
                        <th>Talep Tarihi</th>
                        <th>İşlemler</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        @foreach (var request in Model)
                        {
                            <tr class="@(request.ConflictLeaveUser == true ? "table-danger" : "")" title="@(request.ConflictLeaveUser == true ? "Bu tarihlerde başka çalışanların da izni var." : "")"
                                onclick='showLeaveDetail(@Html.Raw(Json.Serialize(request)))'>
                                <td>
                                    <strong>@request.User?.FirstName @request.User?.LastName</strong><br />
                                    <small class="text-muted">@request.User?.Email</small>
                                </td>
                                <td>
                                    @switch (request.LeaveType)
                                    {
                                        case LeaveType.Annual:
                                            <span class="badge bg-primary">Yıllık İzin</span>
                                            break;
                                        case LeaveType.Sick:
                                            <span class="badge bg-warning">Hastalık İzni</span>
                                            break;
                                        case LeaveType.Maternity:
                                            <span class="badge bg-info">Doğum İzni</span>
                                            break;
                                        case LeaveType.Bereavement:
                                            <span class="badge bg-dark">Ölüm İzin</span>
                                            break;
                                        case LeaveType.Marriage:
                                            <span class="badge bg-secondary">Evlilik İzin</span>
                                            break;
                                    }
                                </td>
                                <td>@request.StartDate.ToString("dd.MM.yyyy")</td>
                                <td>@request.EndDate.ToString("dd.MM.yyyy")</td>
                                <td>
                                    <strong>@(LeaveCalculator.CalculateLeaveDate(request.StartDate,request.EndDate)) gün</strong>
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(request.Description))
                                    {
                                        <span title="@request.Description">
                                            @(request.Description.Length > 30 ? request.Description.Substring(0, 30) + "..." : request.Description)
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">-</span>
                                    }
                                </td>
                                <td>
                                    @switch (request.Status)
                                    {
                                        case LeaveStatus.Pending:
                                            <span class="badge bg-warning">Bekleyen</span>
                                            break;
                                        case LeaveStatus.Approved:
                                            <span class="badge bg-success">Onaylandı</span>
                                            break;
                                        case LeaveStatus.Rejected:
                                            <span class="badge bg-danger">Reddedildi</span>
                                            break;
                                    }
                                </td>
                                <td>@request.CreatedAt.ToString("dd.MM.yyyy HH:mm")</td>
                                <td>
                                    @if (request.Status == LeaveStatus.Pending)
                                    {
                                        <div class="btn-group" role="group">
                                            <form asp-action="ApproveLeave" asp-controller="Manager" method="post" style="display: inline;" onsubmit="handleSubmit(this)">
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="id" value="@request.Id" />
                                                <button type="submit" class="btn btn-success btn-sm"
                                                        onclick="event.stopPropagation(); return confirm('Bu izin talebini onaylamak istediğinizden emin misiniz?')">
                                                    Onayla
                                                </button>
                                            </form>

                                            <button type="button" class="btn btn-danger btn-sm"
                                                    onclick="event.stopPropagation(); showRejectModal(@request.Id, '@request.User?.FirstName @request.User?.LastName')">
                                                Reddet
                                            </button>
                                        </div>
                                    }
                                    else if (request.Status == LeaveStatus.Rejected && !string.IsNullOrEmpty(request.RejectedReason))
                                    {
                                        <button type="button" class="btn btn-info btn-sm"
                                                onclick="event.stopPropagation(); showRejectReason('@request.RejectedReason')">
                                            Red Sebebi
                                        </button>
                                    }
                                    else
                                    {
                                        <span class="text-muted">-</span>
                                    }
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="9" class="text-center text-muted">Henüz izin talebi bulunmamaktadır.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<div class="modal fade" id="reasonModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Red Sebebi</h5>
                <button type="button" class="close" data-bs-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p id="reasonText"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="leaveDetailModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">İzin Talebi Detayı</h5>
                <button type="button" class="close" data-bs-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row" id="conflictUserRow" style="display: none;">
                    <div class="col-md-12">
                        <strong>Uyarı:</strong>
                        <div class="alert alert-danger" id="modalConflictUser"></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <strong>Çalışan:</strong>
                        <p id="modalEmployeeName"></p>
                    </div>
                    <div class="col-md-6">
                        <strong>Email:</strong>
                        <p id="modalEmployeeEmail"></p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <strong>İzin Türü:</strong>
                        <p id="modalLeaveType"></p>
                    </div>
                    <div class="col-md-6">
                        <strong>Durum:</strong>
                        <p id="modalStatus"></p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <strong>Başlangıç:</strong>
                        <p id="modalStartDate"></p>
                    </div>
                    <div class="col-md-4">
                        <strong>Bitiş:</strong>
                        <p id="modalEndDate"></p>
                    </div>
                    <div class="col-md-4">
                        <strong>Süre:</strong>
                        <p id="modalDuration"></p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <strong>Açıklama:</strong>
                        <p id="modalDescription"></p>
                    </div>
                </div>
                <div class="row" id="rejectionReasonRow" style="display: none;">
                    <div class="col-md-12">
                        <strong>Red Sebebi:</strong>
                        <div class="alert alert-danger" id="modalRejectionReason"></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <strong>Talep Tarihi:</strong>
                        <p id="modalCreatedAt"></p>
                    </div>
                </div>
            </div>
            <div class="modal-footer" id="modalActions">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="rejectModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">İzin Talebini Reddet</h5>
                <button type="button" class="close" data-bs-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <form asp-action="RejectLeave" asp-controller="Manager" method="post" onsubmit="handleSubmit(this)">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <input type="hidden" id="rejectLeaveId" name="LeaveRequestId" />
                    <p>Çalışan: <strong id="rejectEmployeeName"></strong></p>
                    <div class="form-group">
                        <label for="rejectedReason">Red Sebebi:</label>
                        <textarea name="RejectReason" id="rejectedReason" class="form-control" rows="4"
                                  placeholder="İzin talebinin reddedilme sebebini açıklayın..." required></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                    <button type="submit" class="btn btn-danger">Reddet</button>
                </div>
            </form>
        </div>
    </div>
</div>
<script>
    function showRejectModal(leaveId, employeeName) {
        document.getElementById('rejectLeaveId').value = leaveId;
        document.getElementById('rejectEmployeeName').textContent = employeeName;
        document.getElementById('rejectedReason').value = '';
        $('#leaveDetailModal').modal('hide');
        $('#rejectModal').modal('show');
    }

    function showRejectReason(reason) {
        document.getElementById('reasonText').textContent = reason;
        $('#reasonModal').modal('show');
    }
    function levaeCalculate(startDate, endDate) {
        const start = new Date(startDate);
        const end = new Date(endDate);

        if (isNaN(start) || isNaN(end) || end < start) {
            return 0;
        }

        let count = 0;
        const current = new Date(start);

        while (current <= end) {
            const day = current.getDay();
            if (day !== 0 && day !== 6) {
                count++;
            }
            current.setDate(current.getDate() + 1);
        }

        return count;
    }

    function showLeaveDetail(event) {
        const props = event.extendedProps;
        //onclick='showLeaveDetail({"userId":10,"startDate":"2025-08-14T00:00:00","endDate":"2025-08-16T00:00:00","leaveType":5,"description":"Evlilik izni.","status":0,"rejectedReason":null,"user":{"firstName":"Emre","lastName":"\u015Eahin","email":"emre.sahin@example.com","passwordHash":"$2a$11$BuHxUBNgi/52ra9XKBG3Pu3yo/gRhBeecapbSL2MfYPBm8gBaALJC","role":2,"annualLeaveQuota":11},"id":21,"createdAt":"2025-08-08T00:00:00","createdBy":"10","updatedAt":"2025-08-08T00:00:00","updatedBy":"1"})'>

        const start = new Date(event.startDate);
        const end = new Date(event.endDate);

        const diffDays = levaeCalculate(start,end);


        document.getElementById('modalEmployeeName').textContent = (event.user.firstName +" "+ event.user.lastName);
        document.getElementById('modalEmployeeEmail').textContent = event.user.email;
        document.getElementById('modalLeaveType').innerHTML = getLeaveTypeBadge(event.leaveType);
        document.getElementById('modalStatus').innerHTML = getStatusBadge(event.status);
        document.getElementById('modalStartDate').textContent = formatDate(event.startDate);
        document.getElementById('modalEndDate').textContent = formatDate(event.endDate);
        document.getElementById('modalDuration').textContent = diffDays + ' gün';
        document.getElementById('modalDescription').textContent = event.description || 'Açıklama girilmemiş';
        document.getElementById('modalCreatedAt').textContent = formatDateTime(event.createdAt);

        if (event.status === 2 && event.rejectedReason) {
            document.getElementById('modalRejectionReason').textContent = event.rejectedReason;
            document.getElementById('rejectionReasonRow').style.display = 'block';
        } else {
            document.getElementById('rejectionReasonRow').style.display = 'none';
        }
        if (event.conflictLeaveUser ) {
            document.getElementById('modalConflictUser').textContent = 'Bu tarihlerde başka çalışanların da izni var.';
            document.getElementById('conflictUserRow').style.display = 'block';
        } else {
            document.getElementById('conflictUserRow').style.display = 'none';
        }

        const actionsDiv = document.getElementById('modalActions');
        if (event.status === 0) {
            actionsDiv.innerHTML = `
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                <button type="button" class="btn btn-success" onclick="approveLeave(${event.id})">Onayla</button>
                <button type="button" class="btn btn-danger" onclick="showRejectModal(${event.id}, '${event.user.firstName +" "+ event.user.lastName}')">Reddet</button>
            `;
        } else {
            actionsDiv.innerHTML = `
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
            `;
        }

        $('#leaveDetailModal').modal('show');
    }

    function getLeaveTypeText(type) {
        switch(type) {
            case 'Annual': return 'Yıllık İzin';
            case 'Sick': return 'Hastalık İzni';
            case 'Maternity': return 'Doğum İzni';
            case 'Bereavement': return 'Taziye İzni';
            case 'Marriage': return 'Evlilik İzni';
            default: return type;
        }
    }


    function getLeaveTypeBadge(type) {
        switch (type) {
            case 1:return '<span class="badge bg-primary">Yıllık İzin</span>';
            case 2:return '<span class="badge bg-warning">Hastalık İzni</span>';
            case 3:return '<span class="badge bg-info">Doğum İzni</span>';
            case 4:return '<span class="badge bg-dark">Ölüm İzni</span>';
            case 5:return '<span class="badge bg-success">Evlilik İzni</span>';
            default:return '<span class="badge bg-light">' + type + '</span>';
        }

    }

    function getStatusBadge(status) {
        switch(status) {
            case 0: return '<span class="badge bg-warning">Bekleyen</span>';
            case 1: return '<span class="badge bg-success">Onaylandı</span>';
            case 2: return '<span class="badge bg-danger">Reddedildi</span>';
            default: return '<span class="badge bg-light">' + status + '</span>';
        }
    }

    function getLeaveTypeFromValue(value) {
        switch (value) {
            case '1': return 'Annual';
            case '2': return 'Sick';
            case '3': return 'Maternity';
            case '4': return 'Bereavement';
            case '5': return 'Marriage';
            default: return '';
        }
    }
    function formatDate(date) {
        const d = new Date(date);
        const day = String(d.getDate()).padStart(2, '0');
        const month = String(d.getMonth() + 1).padStart(2, '0'); 
        const year = d.getFullYear();

        return `${day}.${month}.${year}`;
    }
    function formatDateTime(date) {
        const d = new Date(date);

        const day = String(d.getDate()).padStart(2, '0');
        const month = String(d.getMonth() + 1).padStart(2, '0');
        const year = d.getFullYear();

        const hours = String(d.getHours()).padStart(2, '0');
        const minutes = String(d.getMinutes()).padStart(2, '0');

        return `${day}.${month}.${year} ${hours}:${minutes}`;
    }
    function approveLeave(leaveId) {
        if (confirm('Bu izin talebini onaylamak istediğinizden emin misiniz?')) {
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = '@Url.Action("ApproveLeave", "Manager")';

            const tokenInput = document.createElement('input');
            tokenInput.type = 'hidden';
            tokenInput.name = '__RequestVerificationToken';
            tokenInput.value = document.querySelector('input[name="__RequestVerificationToken"]').value;

            const idInput = document.createElement('input');
            idInput.type = 'hidden';
            idInput.name = 'id';
            idInput.value = leaveId;


            form.appendChild(tokenInput);
            form.appendChild(idInput);
            document.body.appendChild(form);
            form.submit();
        }
    }
</script>
<script>
    function handleSubmit(form) {
        const btn = form.querySelector("button[type='submit']");
        btn.disabled = true;
        btn.innerHTML = '<span class="spinner-border spinner-border-sm"></span> Gönderiliyor...';
    }
</script>

@functions {
    string GetStatusColor(LeaveStatus status)
    {
        return status switch
        {
            LeaveStatus.Pending => "#ffc107",
            LeaveStatus.Approved => "#28a745",
            LeaveStatus.Rejected => "#dc3545",
            _ => "#6c757d"
        };
    }
}